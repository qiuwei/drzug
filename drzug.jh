entity Product {
    name String required,
    image ImageBlob,
    description TextBlob,
    salePrice BigDecimal,
    sourcePrice BigDecimal,
    type ProductType
}

enum OrderStatus {
    CANCELLED, LOCKED, COMPLETED, NEW, INQUIRY
}

enum InvoiceStatus {
    OPEN, PAID
}

enum ProductType {
    SERVICE, PRODUCT
}

entity Invoice {
    createAt ZonedDateTime required,
    status InvoiceStatus
}

entity InvoiceItem {
    count Long required,
    discount BigDecimal
}

entity OrderItem{
    count Long required,
    discount BigDecimal
}

entity Order {
    createdAt ZonedDateTime required, 
    status OrderStatus required
}

entity Packet {
    weight BigDecimal required,
    status PacketStatus required 
}

entity Payment {
    date ZonedDateTime required,
    amount BigDecimal required, 
    unit Unit required
}

enum Unit {
     CNY,
     EURO
}

entity PacketItem{
     count Long required
}

enum PacketStatus{
     NEW,
     SENT,
     ARRIVED
}

entity Storage{
     name String required,
}

entity Provider {
    name String required
}

entity Customer {
    firstName String required,
    lastName String required
}

entity Tax {
    name String required,
    rate BigDecimal required
}

relationship OneToMany {
    Invoice{customer(firstName)} to Customer,
    Invoice{invoiceItem} to InvoiceItem,
    Order{orderItem} to OrderItem,
    Packet{packetItem} to PacketItem 
}

relationship OneToOne {
    InvoiceItem{product(name)} to Product,
    InvoiceItem{tax(name)} to Tax,
    OrderItem{product(name)} to Product,
    Packet{destination(name)} to Storage
}

relationship ManyToMany {
	Product{provider(name)} to Provider{product(name)}
}

dto all with mapstruct

service all with serviceImpl

paginate all with pagination

angularSuffix * with mysuffix
